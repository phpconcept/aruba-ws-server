<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : aruba-iot-types.proto
 */


namespace aruba_telemetry;

/**
 * Protobuf enum : aruba_telemetry.SbTopic
 */
class SbTopic extends \Protobuf\Enum
{

    /**
     * actions = 0
     */
    const actions_VALUE = 0;

    /**
     * config = 1
     */
    const config_VALUE = 1;

    /**
     * sbStatus = 2
     */
    const sbStatus_VALUE = 2;

    /**
     * @var \aruba_telemetry\SbTopic
     */
    protected static $actions = null;

    /**
     * @var \aruba_telemetry\SbTopic
     */
    protected static $config = null;

    /**
     * @var \aruba_telemetry\SbTopic
     */
    protected static $sbStatus = null;

    /**
     * @return \aruba_telemetry\SbTopic
     */
    public static function actions()
    {
        if (self::$actions !== null) {
            return self::$actions;
        }

        return self::$actions = new self('actions', self::actions_VALUE);
    }

    /**
     * @return \aruba_telemetry\SbTopic
     */
    public static function config()
    {
        if (self::$config !== null) {
            return self::$config;
        }

        return self::$config = new self('config', self::config_VALUE);
    }

    /**
     * @return \aruba_telemetry\SbTopic
     */
    public static function sbStatus()
    {
        if (self::$sbStatus !== null) {
            return self::$sbStatus;
        }

        return self::$sbStatus = new self('sbStatus', self::sbStatus_VALUE);
    }

    /**
     * @param int $value
     * @return \aruba_telemetry\SbTopic
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::actions();
            case 1: return self::config();
            case 2: return self::sbStatus();
            default: return null;
        }
    }


}

