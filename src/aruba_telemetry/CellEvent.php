<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : aruba-iot-nb-telemetry.proto
 */


namespace aruba_telemetry;

/**
 * Protobuf enum : aruba_telemetry.CellEvent
 */
class CellEvent extends \Protobuf\Enum
{

    /**
     * entry = 0
     */
    const entry_VALUE = 0;

    /**
     * exit = 1
     */
    const exit_VALUE = 1;

    /**
     * update = 2
     */
    const update_VALUE = 2;

    /**
     * ageout = 3
     */
    const ageout_VALUE = 3;

    /**
     * @var \aruba_telemetry\CellEvent
     */
    protected static $entry = null;

    /**
     * @var \aruba_telemetry\CellEvent
     */
    protected static $exit = null;

    /**
     * @var \aruba_telemetry\CellEvent
     */
    protected static $update = null;

    /**
     * @var \aruba_telemetry\CellEvent
     */
    protected static $ageout = null;

    /**
     * @return \aruba_telemetry\CellEvent
     */
    public static function entry()
    {
        if (self::$entry !== null) {
            return self::$entry;
        }

        return self::$entry = new self('entry', self::entry_VALUE);
    }

    /**
     * @return \aruba_telemetry\CellEvent
     */
    public static function exit()
    {
        if (self::$exit !== null) {
            return self::$exit;
        }

        return self::$exit = new self('exit', self::exit_VALUE);
    }

    /**
     * @return \aruba_telemetry\CellEvent
     */
    public static function update()
    {
        if (self::$update !== null) {
            return self::$update;
        }

        return self::$update = new self('update', self::update_VALUE);
    }

    /**
     * @return \aruba_telemetry\CellEvent
     */
    public static function ageout()
    {
        if (self::$ageout !== null) {
            return self::$ageout;
        }

        return self::$ageout = new self('ageout', self::ageout_VALUE);
    }

    /**
     * @param int $value
     * @return \aruba_telemetry\CellEvent
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::entry();
            case 1: return self::exit();
            case 2: return self::update();
            case 3: return self::ageout();
            default: return null;
        }
    }


}

