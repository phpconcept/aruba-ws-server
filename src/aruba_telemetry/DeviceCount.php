<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : aruba-iot-nb-device-count.proto
 */


namespace aruba_telemetry;

/**
 * Protobuf message : aruba_telemetry.DeviceCount
 */
class DeviceCount extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * dev_unclassified optional int32 = 1
     *
     * @var int
     */
    protected $dev_unclassified = null;

    /**
     * dev_arubaBeacon optional int32 = 2
     *
     * @var int
     */
    protected $dev_arubaBeacon = null;

    /**
     * dev_arubaTag optional int32 = 3
     *
     * @var int
     */
    protected $dev_arubaTag = null;

    /**
     * dev_zfTag optional int32 = 4
     *
     * @var int
     */
    protected $dev_zfTag = null;

    /**
     * dev_stanleyTag optional int32 = 5
     *
     * @var int
     */
    protected $dev_stanleyTag = null;

    /**
     * dev_virginBeacon optional int32 = 6
     *
     * @var int
     */
    protected $dev_virginBeacon = null;

    /**
     * dev_enoceanSensor optional int32 = 7
     *
     * @var int
     */
    protected $dev_enoceanSensor = null;

    /**
     * dev_enoceanSwitch optional int32 = 8
     *
     * @var int
     */
    protected $dev_enoceanSwitch = null;

    /**
     * dev_iBeacon optional int32 = 9
     *
     * @var int
     */
    protected $dev_iBeacon = null;

    /**
     * dev_allBleData optional int32 = 10
     *
     * @var int
     */
    protected $dev_allBleData = null;

    /**
     * dev_RawBleData optional int32 = 11
     *
     * @var int
     */
    protected $dev_RawBleData = null;

    /**
     * dev_eddystone optional int32 = 12
     *
     * @var int
     */
    protected $dev_eddystone = null;

    /**
     * dev_assaAbloy optional int32 = 13
     *
     * @var int
     */
    protected $dev_assaAbloy = null;

    /**
     * dev_arubaSensor optional int32 = 14
     *
     * @var int
     */
    protected $dev_arubaSensor = null;

    /**
     * dev_abbSensor optional int32 = 15
     *
     * @var int
     */
    protected $dev_abbSensor = null;

    /**
     * dev_wifiTag optional int32 = 16
     *
     * @var int
     */
    protected $dev_wifiTag = null;

    /**
     * dev_wifiAssocSta optional int32 = 17
     *
     * @var int
     */
    protected $dev_wifiAssocSta = null;

    /**
     * dev_wifiUnassocSta optional int32 = 18
     *
     * @var int
     */
    protected $dev_wifiUnassocSta = null;

    /**
     * dev_mysphera optional int32 = 19
     *
     * @var int
     */
    protected $dev_mysphera = null;

    /**
     * dev_sBeacon optional int32 = 20
     *
     * @var int
     */
    protected $dev_sBeacon = null;

    /**
     * dev_onity optional int32 = 21
     *
     * @var int
     */
    protected $dev_onity = null;

    /**
     * dev_minew optional int32 = 22
     *
     * @var int
     */
    protected $dev_minew = null;

    /**
     * dev_google optional int32 = 23
     *
     * @var int
     */
    protected $dev_google = null;

    /**
     * dev_polestar optional int32 = 24
     *
     * @var int
     */
    protected $dev_polestar = null;

    /**
     * dev_blyott optional int32 = 25
     *
     * @var int
     */
    protected $dev_blyott = null;

    /**
     * dev_diract optional int32 = 26
     *
     * @var int
     */
    protected $dev_diract = null;

    /**
     * dev_gwahygiene optional int32 = 27
     *
     * @var int
     */
    protected $dev_gwahygiene = null;

    /**
     * Check if 'dev_unclassified' has a value
     *
     * @return bool
     */
    public function hasDevUnclassified()
    {
        return $this->dev_unclassified !== null;
    }

    /**
     * Get 'dev_unclassified' value
     *
     * @return int
     */
    public function getDevUnclassified()
    {
        return $this->dev_unclassified;
    }

    /**
     * Set 'dev_unclassified' value
     *
     * @param int $value
     */
    public function setDevUnclassified($value = null)
    {
        $this->dev_unclassified = $value;
    }

    /**
     * Check if 'dev_arubaBeacon' has a value
     *
     * @return bool
     */
    public function hasDevArubaBeacon()
    {
        return $this->dev_arubaBeacon !== null;
    }

    /**
     * Get 'dev_arubaBeacon' value
     *
     * @return int
     */
    public function getDevArubaBeacon()
    {
        return $this->dev_arubaBeacon;
    }

    /**
     * Set 'dev_arubaBeacon' value
     *
     * @param int $value
     */
    public function setDevArubaBeacon($value = null)
    {
        $this->dev_arubaBeacon = $value;
    }

    /**
     * Check if 'dev_arubaTag' has a value
     *
     * @return bool
     */
    public function hasDevArubaTag()
    {
        return $this->dev_arubaTag !== null;
    }

    /**
     * Get 'dev_arubaTag' value
     *
     * @return int
     */
    public function getDevArubaTag()
    {
        return $this->dev_arubaTag;
    }

    /**
     * Set 'dev_arubaTag' value
     *
     * @param int $value
     */
    public function setDevArubaTag($value = null)
    {
        $this->dev_arubaTag = $value;
    }

    /**
     * Check if 'dev_zfTag' has a value
     *
     * @return bool
     */
    public function hasDevZfTag()
    {
        return $this->dev_zfTag !== null;
    }

    /**
     * Get 'dev_zfTag' value
     *
     * @return int
     */
    public function getDevZfTag()
    {
        return $this->dev_zfTag;
    }

    /**
     * Set 'dev_zfTag' value
     *
     * @param int $value
     */
    public function setDevZfTag($value = null)
    {
        $this->dev_zfTag = $value;
    }

    /**
     * Check if 'dev_stanleyTag' has a value
     *
     * @return bool
     */
    public function hasDevStanleyTag()
    {
        return $this->dev_stanleyTag !== null;
    }

    /**
     * Get 'dev_stanleyTag' value
     *
     * @return int
     */
    public function getDevStanleyTag()
    {
        return $this->dev_stanleyTag;
    }

    /**
     * Set 'dev_stanleyTag' value
     *
     * @param int $value
     */
    public function setDevStanleyTag($value = null)
    {
        $this->dev_stanleyTag = $value;
    }

    /**
     * Check if 'dev_virginBeacon' has a value
     *
     * @return bool
     */
    public function hasDevVirginBeacon()
    {
        return $this->dev_virginBeacon !== null;
    }

    /**
     * Get 'dev_virginBeacon' value
     *
     * @return int
     */
    public function getDevVirginBeacon()
    {
        return $this->dev_virginBeacon;
    }

    /**
     * Set 'dev_virginBeacon' value
     *
     * @param int $value
     */
    public function setDevVirginBeacon($value = null)
    {
        $this->dev_virginBeacon = $value;
    }

    /**
     * Check if 'dev_enoceanSensor' has a value
     *
     * @return bool
     */
    public function hasDevEnoceanSensor()
    {
        return $this->dev_enoceanSensor !== null;
    }

    /**
     * Get 'dev_enoceanSensor' value
     *
     * @return int
     */
    public function getDevEnoceanSensor()
    {
        return $this->dev_enoceanSensor;
    }

    /**
     * Set 'dev_enoceanSensor' value
     *
     * @param int $value
     */
    public function setDevEnoceanSensor($value = null)
    {
        $this->dev_enoceanSensor = $value;
    }

    /**
     * Check if 'dev_enoceanSwitch' has a value
     *
     * @return bool
     */
    public function hasDevEnoceanSwitch()
    {
        return $this->dev_enoceanSwitch !== null;
    }

    /**
     * Get 'dev_enoceanSwitch' value
     *
     * @return int
     */
    public function getDevEnoceanSwitch()
    {
        return $this->dev_enoceanSwitch;
    }

    /**
     * Set 'dev_enoceanSwitch' value
     *
     * @param int $value
     */
    public function setDevEnoceanSwitch($value = null)
    {
        $this->dev_enoceanSwitch = $value;
    }

    /**
     * Check if 'dev_iBeacon' has a value
     *
     * @return bool
     */
    public function hasDevIBeacon()
    {
        return $this->dev_iBeacon !== null;
    }

    /**
     * Get 'dev_iBeacon' value
     *
     * @return int
     */
    public function getDevIBeacon()
    {
        return $this->dev_iBeacon;
    }

    /**
     * Set 'dev_iBeacon' value
     *
     * @param int $value
     */
    public function setDevIBeacon($value = null)
    {
        $this->dev_iBeacon = $value;
    }

    /**
     * Check if 'dev_allBleData' has a value
     *
     * @return bool
     */
    public function hasDevAllBleData()
    {
        return $this->dev_allBleData !== null;
    }

    /**
     * Get 'dev_allBleData' value
     *
     * @return int
     */
    public function getDevAllBleData()
    {
        return $this->dev_allBleData;
    }

    /**
     * Set 'dev_allBleData' value
     *
     * @param int $value
     */
    public function setDevAllBleData($value = null)
    {
        $this->dev_allBleData = $value;
    }

    /**
     * Check if 'dev_RawBleData' has a value
     *
     * @return bool
     */
    public function hasDevRawBleData()
    {
        return $this->dev_RawBleData !== null;
    }

    /**
     * Get 'dev_RawBleData' value
     *
     * @return int
     */
    public function getDevRawBleData()
    {
        return $this->dev_RawBleData;
    }

    /**
     * Set 'dev_RawBleData' value
     *
     * @param int $value
     */
    public function setDevRawBleData($value = null)
    {
        $this->dev_RawBleData = $value;
    }

    /**
     * Check if 'dev_eddystone' has a value
     *
     * @return bool
     */
    public function hasDevEddystone()
    {
        return $this->dev_eddystone !== null;
    }

    /**
     * Get 'dev_eddystone' value
     *
     * @return int
     */
    public function getDevEddystone()
    {
        return $this->dev_eddystone;
    }

    /**
     * Set 'dev_eddystone' value
     *
     * @param int $value
     */
    public function setDevEddystone($value = null)
    {
        $this->dev_eddystone = $value;
    }

    /**
     * Check if 'dev_assaAbloy' has a value
     *
     * @return bool
     */
    public function hasDevAssaAbloy()
    {
        return $this->dev_assaAbloy !== null;
    }

    /**
     * Get 'dev_assaAbloy' value
     *
     * @return int
     */
    public function getDevAssaAbloy()
    {
        return $this->dev_assaAbloy;
    }

    /**
     * Set 'dev_assaAbloy' value
     *
     * @param int $value
     */
    public function setDevAssaAbloy($value = null)
    {
        $this->dev_assaAbloy = $value;
    }

    /**
     * Check if 'dev_arubaSensor' has a value
     *
     * @return bool
     */
    public function hasDevArubaSensor()
    {
        return $this->dev_arubaSensor !== null;
    }

    /**
     * Get 'dev_arubaSensor' value
     *
     * @return int
     */
    public function getDevArubaSensor()
    {
        return $this->dev_arubaSensor;
    }

    /**
     * Set 'dev_arubaSensor' value
     *
     * @param int $value
     */
    public function setDevArubaSensor($value = null)
    {
        $this->dev_arubaSensor = $value;
    }

    /**
     * Check if 'dev_abbSensor' has a value
     *
     * @return bool
     */
    public function hasDevAbbSensor()
    {
        return $this->dev_abbSensor !== null;
    }

    /**
     * Get 'dev_abbSensor' value
     *
     * @return int
     */
    public function getDevAbbSensor()
    {
        return $this->dev_abbSensor;
    }

    /**
     * Set 'dev_abbSensor' value
     *
     * @param int $value
     */
    public function setDevAbbSensor($value = null)
    {
        $this->dev_abbSensor = $value;
    }

    /**
     * Check if 'dev_wifiTag' has a value
     *
     * @return bool
     */
    public function hasDevWifiTag()
    {
        return $this->dev_wifiTag !== null;
    }

    /**
     * Get 'dev_wifiTag' value
     *
     * @return int
     */
    public function getDevWifiTag()
    {
        return $this->dev_wifiTag;
    }

    /**
     * Set 'dev_wifiTag' value
     *
     * @param int $value
     */
    public function setDevWifiTag($value = null)
    {
        $this->dev_wifiTag = $value;
    }

    /**
     * Check if 'dev_wifiAssocSta' has a value
     *
     * @return bool
     */
    public function hasDevWifiAssocSta()
    {
        return $this->dev_wifiAssocSta !== null;
    }

    /**
     * Get 'dev_wifiAssocSta' value
     *
     * @return int
     */
    public function getDevWifiAssocSta()
    {
        return $this->dev_wifiAssocSta;
    }

    /**
     * Set 'dev_wifiAssocSta' value
     *
     * @param int $value
     */
    public function setDevWifiAssocSta($value = null)
    {
        $this->dev_wifiAssocSta = $value;
    }

    /**
     * Check if 'dev_wifiUnassocSta' has a value
     *
     * @return bool
     */
    public function hasDevWifiUnassocSta()
    {
        return $this->dev_wifiUnassocSta !== null;
    }

    /**
     * Get 'dev_wifiUnassocSta' value
     *
     * @return int
     */
    public function getDevWifiUnassocSta()
    {
        return $this->dev_wifiUnassocSta;
    }

    /**
     * Set 'dev_wifiUnassocSta' value
     *
     * @param int $value
     */
    public function setDevWifiUnassocSta($value = null)
    {
        $this->dev_wifiUnassocSta = $value;
    }

    /**
     * Check if 'dev_mysphera' has a value
     *
     * @return bool
     */
    public function hasDevMysphera()
    {
        return $this->dev_mysphera !== null;
    }

    /**
     * Get 'dev_mysphera' value
     *
     * @return int
     */
    public function getDevMysphera()
    {
        return $this->dev_mysphera;
    }

    /**
     * Set 'dev_mysphera' value
     *
     * @param int $value
     */
    public function setDevMysphera($value = null)
    {
        $this->dev_mysphera = $value;
    }

    /**
     * Check if 'dev_sBeacon' has a value
     *
     * @return bool
     */
    public function hasDevSBeacon()
    {
        return $this->dev_sBeacon !== null;
    }

    /**
     * Get 'dev_sBeacon' value
     *
     * @return int
     */
    public function getDevSBeacon()
    {
        return $this->dev_sBeacon;
    }

    /**
     * Set 'dev_sBeacon' value
     *
     * @param int $value
     */
    public function setDevSBeacon($value = null)
    {
        $this->dev_sBeacon = $value;
    }

    /**
     * Check if 'dev_onity' has a value
     *
     * @return bool
     */
    public function hasDevOnity()
    {
        return $this->dev_onity !== null;
    }

    /**
     * Get 'dev_onity' value
     *
     * @return int
     */
    public function getDevOnity()
    {
        return $this->dev_onity;
    }

    /**
     * Set 'dev_onity' value
     *
     * @param int $value
     */
    public function setDevOnity($value = null)
    {
        $this->dev_onity = $value;
    }

    /**
     * Check if 'dev_minew' has a value
     *
     * @return bool
     */
    public function hasDevMinew()
    {
        return $this->dev_minew !== null;
    }

    /**
     * Get 'dev_minew' value
     *
     * @return int
     */
    public function getDevMinew()
    {
        return $this->dev_minew;
    }

    /**
     * Set 'dev_minew' value
     *
     * @param int $value
     */
    public function setDevMinew($value = null)
    {
        $this->dev_minew = $value;
    }

    /**
     * Check if 'dev_google' has a value
     *
     * @return bool
     */
    public function hasDevGoogle()
    {
        return $this->dev_google !== null;
    }

    /**
     * Get 'dev_google' value
     *
     * @return int
     */
    public function getDevGoogle()
    {
        return $this->dev_google;
    }

    /**
     * Set 'dev_google' value
     *
     * @param int $value
     */
    public function setDevGoogle($value = null)
    {
        $this->dev_google = $value;
    }

    /**
     * Check if 'dev_polestar' has a value
     *
     * @return bool
     */
    public function hasDevPolestar()
    {
        return $this->dev_polestar !== null;
    }

    /**
     * Get 'dev_polestar' value
     *
     * @return int
     */
    public function getDevPolestar()
    {
        return $this->dev_polestar;
    }

    /**
     * Set 'dev_polestar' value
     *
     * @param int $value
     */
    public function setDevPolestar($value = null)
    {
        $this->dev_polestar = $value;
    }

    /**
     * Check if 'dev_blyott' has a value
     *
     * @return bool
     */
    public function hasDevBlyott()
    {
        return $this->dev_blyott !== null;
    }

    /**
     * Get 'dev_blyott' value
     *
     * @return int
     */
    public function getDevBlyott()
    {
        return $this->dev_blyott;
    }

    /**
     * Set 'dev_blyott' value
     *
     * @param int $value
     */
    public function setDevBlyott($value = null)
    {
        $this->dev_blyott = $value;
    }

    /**
     * Check if 'dev_diract' has a value
     *
     * @return bool
     */
    public function hasDevDiract()
    {
        return $this->dev_diract !== null;
    }

    /**
     * Get 'dev_diract' value
     *
     * @return int
     */
    public function getDevDiract()
    {
        return $this->dev_diract;
    }

    /**
     * Set 'dev_diract' value
     *
     * @param int $value
     */
    public function setDevDiract($value = null)
    {
        $this->dev_diract = $value;
    }

    /**
     * Check if 'dev_gwahygiene' has a value
     *
     * @return bool
     */
    public function hasDevGwahygiene()
    {
        return $this->dev_gwahygiene !== null;
    }

    /**
     * Get 'dev_gwahygiene' value
     *
     * @return int
     */
    public function getDevGwahygiene()
    {
        return $this->dev_gwahygiene;
    }

    /**
     * Set 'dev_gwahygiene' value
     *
     * @param int $value
     */
    public function setDevGwahygiene($value = null)
    {
        $this->dev_gwahygiene = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'dev_unclassified' => null,
            'dev_arubaBeacon' => null,
            'dev_arubaTag' => null,
            'dev_zfTag' => null,
            'dev_stanleyTag' => null,
            'dev_virginBeacon' => null,
            'dev_enoceanSensor' => null,
            'dev_enoceanSwitch' => null,
            'dev_iBeacon' => null,
            'dev_allBleData' => null,
            'dev_RawBleData' => null,
            'dev_eddystone' => null,
            'dev_assaAbloy' => null,
            'dev_arubaSensor' => null,
            'dev_abbSensor' => null,
            'dev_wifiTag' => null,
            'dev_wifiAssocSta' => null,
            'dev_wifiUnassocSta' => null,
            'dev_mysphera' => null,
            'dev_sBeacon' => null,
            'dev_onity' => null,
            'dev_minew' => null,
            'dev_google' => null,
            'dev_polestar' => null,
            'dev_blyott' => null,
            'dev_diract' => null,
            'dev_gwahygiene' => null
        ], $values);

        $message->setDevUnclassified($values['dev_unclassified']);
        $message->setDevArubaBeacon($values['dev_arubaBeacon']);
        $message->setDevArubaTag($values['dev_arubaTag']);
        $message->setDevZfTag($values['dev_zfTag']);
        $message->setDevStanleyTag($values['dev_stanleyTag']);
        $message->setDevVirginBeacon($values['dev_virginBeacon']);
        $message->setDevEnoceanSensor($values['dev_enoceanSensor']);
        $message->setDevEnoceanSwitch($values['dev_enoceanSwitch']);
        $message->setDevIBeacon($values['dev_iBeacon']);
        $message->setDevAllBleData($values['dev_allBleData']);
        $message->setDevRawBleData($values['dev_RawBleData']);
        $message->setDevEddystone($values['dev_eddystone']);
        $message->setDevAssaAbloy($values['dev_assaAbloy']);
        $message->setDevArubaSensor($values['dev_arubaSensor']);
        $message->setDevAbbSensor($values['dev_abbSensor']);
        $message->setDevWifiTag($values['dev_wifiTag']);
        $message->setDevWifiAssocSta($values['dev_wifiAssocSta']);
        $message->setDevWifiUnassocSta($values['dev_wifiUnassocSta']);
        $message->setDevMysphera($values['dev_mysphera']);
        $message->setDevSBeacon($values['dev_sBeacon']);
        $message->setDevOnity($values['dev_onity']);
        $message->setDevMinew($values['dev_minew']);
        $message->setDevGoogle($values['dev_google']);
        $message->setDevPolestar($values['dev_polestar']);
        $message->setDevBlyott($values['dev_blyott']);
        $message->setDevDiract($values['dev_diract']);
        $message->setDevGwahygiene($values['dev_gwahygiene']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'DeviceCount',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'dev_unclassified',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'dev_arubaBeacon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'dev_arubaTag',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'dev_zfTag',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'dev_stanleyTag',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'dev_virginBeacon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'dev_enoceanSensor',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'dev_enoceanSwitch',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'dev_iBeacon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'dev_allBleData',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'dev_RawBleData',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'dev_eddystone',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'dev_assaAbloy',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'dev_arubaSensor',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'dev_abbSensor',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'dev_wifiTag',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 17,
                    'name' => 'dev_wifiAssocSta',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 18,
                    'name' => 'dev_wifiUnassocSta',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 19,
                    'name' => 'dev_mysphera',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 20,
                    'name' => 'dev_sBeacon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 21,
                    'name' => 'dev_onity',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 22,
                    'name' => 'dev_minew',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 23,
                    'name' => 'dev_google',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 24,
                    'name' => 'dev_polestar',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 25,
                    'name' => 'dev_blyott',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 26,
                    'name' => 'dev_diract',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 27,
                    'name' => 'dev_gwahygiene',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->dev_unclassified !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->dev_unclassified);
        }

        if ($this->dev_arubaBeacon !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->dev_arubaBeacon);
        }

        if ($this->dev_arubaTag !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->dev_arubaTag);
        }

        if ($this->dev_zfTag !== null) {
            $writer->writeVarint($stream, 32);
            $writer->writeVarint($stream, $this->dev_zfTag);
        }

        if ($this->dev_stanleyTag !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->dev_stanleyTag);
        }

        if ($this->dev_virginBeacon !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->dev_virginBeacon);
        }

        if ($this->dev_enoceanSensor !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->dev_enoceanSensor);
        }

        if ($this->dev_enoceanSwitch !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeVarint($stream, $this->dev_enoceanSwitch);
        }

        if ($this->dev_iBeacon !== null) {
            $writer->writeVarint($stream, 72);
            $writer->writeVarint($stream, $this->dev_iBeacon);
        }

        if ($this->dev_allBleData !== null) {
            $writer->writeVarint($stream, 80);
            $writer->writeVarint($stream, $this->dev_allBleData);
        }

        if ($this->dev_RawBleData !== null) {
            $writer->writeVarint($stream, 88);
            $writer->writeVarint($stream, $this->dev_RawBleData);
        }

        if ($this->dev_eddystone !== null) {
            $writer->writeVarint($stream, 96);
            $writer->writeVarint($stream, $this->dev_eddystone);
        }

        if ($this->dev_assaAbloy !== null) {
            $writer->writeVarint($stream, 104);
            $writer->writeVarint($stream, $this->dev_assaAbloy);
        }

        if ($this->dev_arubaSensor !== null) {
            $writer->writeVarint($stream, 112);
            $writer->writeVarint($stream, $this->dev_arubaSensor);
        }

        if ($this->dev_abbSensor !== null) {
            $writer->writeVarint($stream, 120);
            $writer->writeVarint($stream, $this->dev_abbSensor);
        }

        if ($this->dev_wifiTag !== null) {
            $writer->writeVarint($stream, 128);
            $writer->writeVarint($stream, $this->dev_wifiTag);
        }

        if ($this->dev_wifiAssocSta !== null) {
            $writer->writeVarint($stream, 136);
            $writer->writeVarint($stream, $this->dev_wifiAssocSta);
        }

        if ($this->dev_wifiUnassocSta !== null) {
            $writer->writeVarint($stream, 144);
            $writer->writeVarint($stream, $this->dev_wifiUnassocSta);
        }

        if ($this->dev_mysphera !== null) {
            $writer->writeVarint($stream, 152);
            $writer->writeVarint($stream, $this->dev_mysphera);
        }

        if ($this->dev_sBeacon !== null) {
            $writer->writeVarint($stream, 160);
            $writer->writeVarint($stream, $this->dev_sBeacon);
        }

        if ($this->dev_onity !== null) {
            $writer->writeVarint($stream, 168);
            $writer->writeVarint($stream, $this->dev_onity);
        }

        if ($this->dev_minew !== null) {
            $writer->writeVarint($stream, 176);
            $writer->writeVarint($stream, $this->dev_minew);
        }

        if ($this->dev_google !== null) {
            $writer->writeVarint($stream, 184);
            $writer->writeVarint($stream, $this->dev_google);
        }

        if ($this->dev_polestar !== null) {
            $writer->writeVarint($stream, 192);
            $writer->writeVarint($stream, $this->dev_polestar);
        }

        if ($this->dev_blyott !== null) {
            $writer->writeVarint($stream, 200);
            $writer->writeVarint($stream, $this->dev_blyott);
        }

        if ($this->dev_diract !== null) {
            $writer->writeVarint($stream, 208);
            $writer->writeVarint($stream, $this->dev_diract);
        }

        if ($this->dev_gwahygiene !== null) {
            $writer->writeVarint($stream, 216);
            $writer->writeVarint($stream, $this->dev_gwahygiene);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_unclassified = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_arubaBeacon = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_arubaTag = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_zfTag = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_stanleyTag = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_virginBeacon = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_enoceanSensor = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_enoceanSwitch = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_iBeacon = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_allBleData = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_RawBleData = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_eddystone = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_assaAbloy = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_arubaSensor = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_abbSensor = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_wifiTag = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 17) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_wifiAssocSta = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 18) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_wifiUnassocSta = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 19) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_mysphera = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 20) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_sBeacon = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 21) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_onity = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 22) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_minew = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 23) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_google = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 24) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_polestar = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 25) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_blyott = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 26) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_diract = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 27) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->dev_gwahygiene = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->dev_unclassified !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_unclassified);
        }

        if ($this->dev_arubaBeacon !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_arubaBeacon);
        }

        if ($this->dev_arubaTag !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_arubaTag);
        }

        if ($this->dev_zfTag !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_zfTag);
        }

        if ($this->dev_stanleyTag !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_stanleyTag);
        }

        if ($this->dev_virginBeacon !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_virginBeacon);
        }

        if ($this->dev_enoceanSensor !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_enoceanSensor);
        }

        if ($this->dev_enoceanSwitch !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_enoceanSwitch);
        }

        if ($this->dev_iBeacon !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_iBeacon);
        }

        if ($this->dev_allBleData !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_allBleData);
        }

        if ($this->dev_RawBleData !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_RawBleData);
        }

        if ($this->dev_eddystone !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_eddystone);
        }

        if ($this->dev_assaAbloy !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_assaAbloy);
        }

        if ($this->dev_arubaSensor !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_arubaSensor);
        }

        if ($this->dev_abbSensor !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->dev_abbSensor);
        }

        if ($this->dev_wifiTag !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_wifiTag);
        }

        if ($this->dev_wifiAssocSta !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_wifiAssocSta);
        }

        if ($this->dev_wifiUnassocSta !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_wifiUnassocSta);
        }

        if ($this->dev_mysphera !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_mysphera);
        }

        if ($this->dev_sBeacon !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_sBeacon);
        }

        if ($this->dev_onity !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_onity);
        }

        if ($this->dev_minew !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_minew);
        }

        if ($this->dev_google !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_google);
        }

        if ($this->dev_polestar !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_polestar);
        }

        if ($this->dev_blyott !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_blyott);
        }

        if ($this->dev_diract !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_diract);
        }

        if ($this->dev_gwahygiene !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->dev_gwahygiene);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->dev_unclassified = null;
        $this->dev_arubaBeacon = null;
        $this->dev_arubaTag = null;
        $this->dev_zfTag = null;
        $this->dev_stanleyTag = null;
        $this->dev_virginBeacon = null;
        $this->dev_enoceanSensor = null;
        $this->dev_enoceanSwitch = null;
        $this->dev_iBeacon = null;
        $this->dev_allBleData = null;
        $this->dev_RawBleData = null;
        $this->dev_eddystone = null;
        $this->dev_assaAbloy = null;
        $this->dev_arubaSensor = null;
        $this->dev_abbSensor = null;
        $this->dev_wifiTag = null;
        $this->dev_wifiAssocSta = null;
        $this->dev_wifiUnassocSta = null;
        $this->dev_mysphera = null;
        $this->dev_sBeacon = null;
        $this->dev_onity = null;
        $this->dev_minew = null;
        $this->dev_google = null;
        $this->dev_polestar = null;
        $this->dev_blyott = null;
        $this->dev_diract = null;
        $this->dev_gwahygiene = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \aruba_telemetry\DeviceCount) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->dev_unclassified = ($message->dev_unclassified !== null) ? $message->dev_unclassified : $this->dev_unclassified;
        $this->dev_arubaBeacon = ($message->dev_arubaBeacon !== null) ? $message->dev_arubaBeacon : $this->dev_arubaBeacon;
        $this->dev_arubaTag = ($message->dev_arubaTag !== null) ? $message->dev_arubaTag : $this->dev_arubaTag;
        $this->dev_zfTag = ($message->dev_zfTag !== null) ? $message->dev_zfTag : $this->dev_zfTag;
        $this->dev_stanleyTag = ($message->dev_stanleyTag !== null) ? $message->dev_stanleyTag : $this->dev_stanleyTag;
        $this->dev_virginBeacon = ($message->dev_virginBeacon !== null) ? $message->dev_virginBeacon : $this->dev_virginBeacon;
        $this->dev_enoceanSensor = ($message->dev_enoceanSensor !== null) ? $message->dev_enoceanSensor : $this->dev_enoceanSensor;
        $this->dev_enoceanSwitch = ($message->dev_enoceanSwitch !== null) ? $message->dev_enoceanSwitch : $this->dev_enoceanSwitch;
        $this->dev_iBeacon = ($message->dev_iBeacon !== null) ? $message->dev_iBeacon : $this->dev_iBeacon;
        $this->dev_allBleData = ($message->dev_allBleData !== null) ? $message->dev_allBleData : $this->dev_allBleData;
        $this->dev_RawBleData = ($message->dev_RawBleData !== null) ? $message->dev_RawBleData : $this->dev_RawBleData;
        $this->dev_eddystone = ($message->dev_eddystone !== null) ? $message->dev_eddystone : $this->dev_eddystone;
        $this->dev_assaAbloy = ($message->dev_assaAbloy !== null) ? $message->dev_assaAbloy : $this->dev_assaAbloy;
        $this->dev_arubaSensor = ($message->dev_arubaSensor !== null) ? $message->dev_arubaSensor : $this->dev_arubaSensor;
        $this->dev_abbSensor = ($message->dev_abbSensor !== null) ? $message->dev_abbSensor : $this->dev_abbSensor;
        $this->dev_wifiTag = ($message->dev_wifiTag !== null) ? $message->dev_wifiTag : $this->dev_wifiTag;
        $this->dev_wifiAssocSta = ($message->dev_wifiAssocSta !== null) ? $message->dev_wifiAssocSta : $this->dev_wifiAssocSta;
        $this->dev_wifiUnassocSta = ($message->dev_wifiUnassocSta !== null) ? $message->dev_wifiUnassocSta : $this->dev_wifiUnassocSta;
        $this->dev_mysphera = ($message->dev_mysphera !== null) ? $message->dev_mysphera : $this->dev_mysphera;
        $this->dev_sBeacon = ($message->dev_sBeacon !== null) ? $message->dev_sBeacon : $this->dev_sBeacon;
        $this->dev_onity = ($message->dev_onity !== null) ? $message->dev_onity : $this->dev_onity;
        $this->dev_minew = ($message->dev_minew !== null) ? $message->dev_minew : $this->dev_minew;
        $this->dev_google = ($message->dev_google !== null) ? $message->dev_google : $this->dev_google;
        $this->dev_polestar = ($message->dev_polestar !== null) ? $message->dev_polestar : $this->dev_polestar;
        $this->dev_blyott = ($message->dev_blyott !== null) ? $message->dev_blyott : $this->dev_blyott;
        $this->dev_diract = ($message->dev_diract !== null) ? $message->dev_diract : $this->dev_diract;
        $this->dev_gwahygiene = ($message->dev_gwahygiene !== null) ? $message->dev_gwahygiene : $this->dev_gwahygiene;
    }


}

