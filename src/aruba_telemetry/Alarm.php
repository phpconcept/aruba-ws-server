<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : aruba-iot-nb-telemetry.proto
 */


namespace aruba_telemetry;

/**
 * Protobuf enum : aruba_telemetry.Alarm
 */
class Alarm extends \Protobuf\Enum
{

    /**
     * water = 1
     */
    const water_VALUE = 1;

    /**
     * smoke = 2
     */
    const smoke_VALUE = 2;

    /**
     * fire = 3
     */
    const fire_VALUE = 3;

    /**
     * glassbreak = 4
     */
    const glassbreak_VALUE = 4;

    /**
     * intrusion = 5
     */
    const intrusion_VALUE = 5;

    /**
     * @var \aruba_telemetry\Alarm
     */
    protected static $water = null;

    /**
     * @var \aruba_telemetry\Alarm
     */
    protected static $smoke = null;

    /**
     * @var \aruba_telemetry\Alarm
     */
    protected static $fire = null;

    /**
     * @var \aruba_telemetry\Alarm
     */
    protected static $glassbreak = null;

    /**
     * @var \aruba_telemetry\Alarm
     */
    protected static $intrusion = null;

    /**
     * @return \aruba_telemetry\Alarm
     */
    public static function water()
    {
        if (self::$water !== null) {
            return self::$water;
        }

        return self::$water = new self('water', self::water_VALUE);
    }

    /**
     * @return \aruba_telemetry\Alarm
     */
    public static function smoke()
    {
        if (self::$smoke !== null) {
            return self::$smoke;
        }

        return self::$smoke = new self('smoke', self::smoke_VALUE);
    }

    /**
     * @return \aruba_telemetry\Alarm
     */
    public static function fire()
    {
        if (self::$fire !== null) {
            return self::$fire;
        }

        return self::$fire = new self('fire', self::fire_VALUE);
    }

    /**
     * @return \aruba_telemetry\Alarm
     */
    public static function glassbreak()
    {
        if (self::$glassbreak !== null) {
            return self::$glassbreak;
        }

        return self::$glassbreak = new self('glassbreak', self::glassbreak_VALUE);
    }

    /**
     * @return \aruba_telemetry\Alarm
     */
    public static function intrusion()
    {
        if (self::$intrusion !== null) {
            return self::$intrusion;
        }

        return self::$intrusion = new self('intrusion', self::intrusion_VALUE);
    }

    /**
     * @param int $value
     * @return \aruba_telemetry\Alarm
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 1: return self::water();
            case 2: return self::smoke();
            case 3: return self::fire();
            case 4: return self::glassbreak();
            case 5: return self::intrusion();
            default: return null;
        }
    }


}

