<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : aruba-iot-nb-telemetry.proto
 */


namespace aruba_telemetry;

/**
 * Protobuf enum : aruba_telemetry.rockerSwitchPosition
 */
class rockerSwitchPosition extends \Protobuf\Enum
{

    /**
     * idle = 0
     */
    const idle_VALUE = 0;

    /**
     * topPressed = 1
     */
    const topPressed_VALUE = 1;

    /**
     * bottomPressed = 2
     */
    const bottomPressed_VALUE = 2;

    /**
     * @var \aruba_telemetry\rockerSwitchPosition
     */
    protected static $idle = null;

    /**
     * @var \aruba_telemetry\rockerSwitchPosition
     */
    protected static $topPressed = null;

    /**
     * @var \aruba_telemetry\rockerSwitchPosition
     */
    protected static $bottomPressed = null;

    /**
     * @return \aruba_telemetry\rockerSwitchPosition
     */
    public static function idle()
    {
        if (self::$idle !== null) {
            return self::$idle;
        }

        return self::$idle = new self('idle', self::idle_VALUE);
    }

    /**
     * @return \aruba_telemetry\rockerSwitchPosition
     */
    public static function topPressed()
    {
        if (self::$topPressed !== null) {
            return self::$topPressed;
        }

        return self::$topPressed = new self('topPressed', self::topPressed_VALUE);
    }

    /**
     * @return \aruba_telemetry\rockerSwitchPosition
     */
    public static function bottomPressed()
    {
        if (self::$bottomPressed !== null) {
            return self::$bottomPressed;
        }

        return self::$bottomPressed = new self('bottomPressed', self::bottomPressed_VALUE);
    }

    /**
     * @param int $value
     * @return \aruba_telemetry\rockerSwitchPosition
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::idle();
            case 1: return self::topPressed();
            case 2: return self::bottomPressed();
            default: return null;
        }
    }


}

